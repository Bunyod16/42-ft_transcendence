version: '3.8'

services:
  postgresdb:
    container_name: postgresdb
    image: postgres:14.7-bullseye
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    # to ensure database is alive before starting every other service
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - trancendence_posgresdb:/var/lib/postgresql/data
    configs:
      - source: postgres_initsql
        target: /docker-entrypoint-initdb.d/init.sh

  nestjs:
    container_name: nestjs
    build:
      context: ./backend
    volumes:
      - trancendence_nestjs:/trancendence_nestjs
    expose:
      - "3000"
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: unless-stopped

  nextjs:
    container_name: nextjs
    build:
      context: ./frontend
    volumes:
      - trancendence_nextjs:/trancendence_nextjs
    ports:
      - "3000:3000"
    depends_on:
      postgresdb:
        condition: service_healthy
      nestjs:
        condition: service_started
    restart: unless-stopped

configs:
  postgres_initsql:
    file: ./backend/postgres/init.sh

volumes:
  trancendence_posgresdb:
  trancendence_nestjs:
  trancendence_nextjs:
